{"ast":null,"code":"const URL = \"https://frederikkesimone.dk/sys\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction ApiFacade() {\n  const setToken = token => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n\n  const getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  const login = (user, pass) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    return fetch(URL + \"/api/login\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n    });\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  const getRecipes = () => {\n    return fetch(URL + \"/api/food/recipe/all\", makeOptions(\"GET\", true)).then(handleHttpErrors);\n  };\n\n  const addRecipe = (name, portion_size, cooking_time, ingredients, description) => {\n    const option = makeOptions(\"POST\", true, {\n      name: name,\n      portion_size: portion_size,\n      cooking_time: cooking_time,\n      ingredients: ingredients,\n      description: description\n    });\n    return fetch(URL + \"/api/food/recipeC/add\", option).then(handleHttpErrors);\n  };\n\n  const updateRecipe = id => {\n    return fetch(URL + \"/api/food/recipeC/edit/\" + id, makeOptions(\"PUT\", true)).then(handleHttpErrors);\n  };\n\n  const deleteRecipe = id => {\n    return fetch(URL + \"/api/food/recipeC/\" + id, makeOptions(\"DELETE\", true)).then(handleHttpErrors);\n  };\n\n  const getCustomRecipe = id => {\n    return fetch(URL + \"recipeC/get/\" + id, makeOptions(\"GET\", true)).then(handleHttpErrors);\n  };\n\n  const getHomemadeRecipes = () => {\n    return fetch(URL + \"/api/food/recipeC/all\", makeOptions(\"GET\", true)).then(handleHttpErrors);\n  };\n\n  const createUser = (username, email, password) => {\n    return fetch(URL + \"/api/user/user/add\", makeOptions(\"POST\", true, {\n      user_name: username,\n      user_email: email,\n      user_pass: password\n    })).then(handleHttpErrors);\n  };\n\n  const getUser = name => {\n    return fetch(URL + \"/api/user/\" + name, makeOptions(\"GET\", true)).then(handleHttpErrors);\n  };\n\n  return {\n    login,\n    logout,\n    getRecipes,\n    addRecipe,\n    updateRecipe,\n    deleteRecipe,\n    getRecipe: getCustomRecipe,\n    getHomemadeRecipes,\n    createUser,\n    getUser\n  };\n}\n\nlet returnVal = ApiFacade();\nexport default returnVal;","map":{"version":3,"sources":["C:/Users/fskn/Documents/3 semester/Outsource Edit version/src/services/apiFacade.js"],"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","ApiFacade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","user","pass","options","makeOptions","username","password","fetch","then","method","addToken","body","opts","headers","Accept","JSON","stringify","getRecipes","addRecipe","name","portion_size","cooking_time","ingredients","description","option","updateRecipe","id","deleteRecipe","getCustomRecipe","getHomemadeRecipes","createUser","email","user_name","user_email","user_pass","getUser","getRecipe","returnVal"],"mappings":"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","sourcesContent":["\r\nconst URL = \"https://frederikkesimone.dk/sys\";\r\nfunction handleHttpErrors(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject({ status: res.status, fullError: res.json() });\r\n  }\r\n  return res.json();\r\n}\r\n\r\nfunction ApiFacade() {\r\n\r\n  const setToken = token => {\r\n    localStorage.setItem(\"jwtToken\", token);\r\n  };\r\n  const getToken = () => {\r\n    return localStorage.getItem(\"jwtToken\");\r\n  };\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() != null;\r\n    return loggedIn;\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  };\r\n\r\n  const login = (user, pass) => {\r\n    const options = makeOptions(\"POST\", true, { username: user, password: pass });\r\n    return fetch(URL + \"/api/login\", options)\r\n      .then(handleHttpErrors)\r\n      .then(res => { setToken(res.token) })\r\n  }\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  }\r\n  const getRecipes = () => {\r\n    return fetch(URL + \"/api/food/recipe/all\", makeOptions(\"GET\", true)).then(handleHttpErrors)\r\n  }\r\n\r\n  const addRecipe = (name, portion_size, cooking_time, ingredients, description) => {\r\n    const option = makeOptions(\"POST\", true, { name: name, portion_size: portion_size, cooking_time: cooking_time, ingredients: ingredients, description: description });\r\n    return fetch(URL + \"/api/food/recipeC/add\", option).then(handleHttpErrors)\r\n  }\r\n\r\n  const updateRecipe = (id) => {\r\n    return fetch(URL + \"/api/food/recipeC/edit/\" + id, makeOptions(\"PUT\", true)).then(handleHttpErrors);\r\n  }\r\n\r\n  const deleteRecipe = (id) => {\r\n    return fetch(URL + \"/api/food/recipeC/\" + id, makeOptions(\"DELETE\", true)).then(handleHttpErrors);\r\n  }\r\n\r\n  const getCustomRecipe = (id) => {\r\n    return fetch(URL + \"recipeC/get/\" + id, makeOptions(\"GET\", true)).then(handleHttpErrors)\r\n  }\r\n\r\n  const getHomemadeRecipes = () => {\r\n    return fetch(URL + \"/api/food/recipeC/all\", makeOptions(\"GET\", true)).then(handleHttpErrors)\r\n  }\r\n\r\n  const createUser = (username, email, password) => {\r\n    return fetch(URL + \"/api/user/user/add\", makeOptions(\"POST\", true, { user_name: username, user_email: email, user_pass: password })).then(handleHttpErrors)\r\n  }\r\n\r\n  const getUser = (name) => {\r\n    return fetch(URL + \"/api/user/\" + name, makeOptions(\"GET\", true)).then(handleHttpErrors)\r\n  }\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    getRecipes,\r\n    addRecipe,\r\n    updateRecipe,\r\n    deleteRecipe,\r\n    getRecipe: getCustomRecipe,\r\n    getHomemadeRecipes,\r\n    createUser,\r\n    getUser\r\n  }\r\n\r\n}\r\n\r\nlet returnVal = ApiFacade();\r\nexport default returnVal;\r\n"]},"metadata":{},"sourceType":"module"}