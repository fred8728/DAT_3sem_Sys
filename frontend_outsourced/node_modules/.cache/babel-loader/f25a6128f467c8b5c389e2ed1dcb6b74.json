{"ast":null,"code":"// http://localhost:8080/securitystarter   https://frederikkesimone.dk/sys\nconst URL = \"https://frederikkesimone.dk/sys\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction ApiFacade() {\n  const setToken = token => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n\n  const getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  const login = (user, pass) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    return fetch(URL + \"/api/login\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n    });\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  const fetchData = () => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n\n    return fetch(URL + \"/api/info/user\", options).then(handleHttpErrors);\n  };\n\n  const getRecipes = () => {\n    const options = makeOptions(\"GET\", true);\n    return fetch(URL + \"/api/food/recipes\", options).then(handleHttpErrors);\n  };\n\n  return {\n    login,\n    logout,\n    fetchData,\n    getRecipes\n  };\n}\n\nlet returnVal = ApiFacade();\nexport default returnVal;","map":{"version":3,"sources":["C:/Users/fskn/Documents/3 semester/Outsource Edit version/src/services/apiFacade.js"],"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","ApiFacade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","user","pass","options","makeOptions","username","password","fetch","then","method","addToken","body","opts","headers","Accept","JSON","stringify","fetchData","getRecipes","returnVal"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,iCAAZ;;AACA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,MAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,WAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,MAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAd;AAAsBC,MAAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ;AAAjC,KAAf,CAAP;AACD;;AACD,SAAON,GAAG,CAACM,IAAJ,EAAP;AACD;;AAED,SAASC,SAAT,GAAqB;AAEnB,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAG,MAAM;AACrB,WAAOF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAP;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMA,QAAQ,GAAGF,QAAQ,MAAM,IAA/B;AACA,WAAOE,QAAP;AACD,GAHD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnBL,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC5B,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAD,EAAS,IAAT,EAAe;AAAEC,MAAAA,QAAQ,EAAEJ,IAAZ;AAAkBK,MAAAA,QAAQ,EAAEJ;AAA5B,KAAf,CAA3B;AACA,WAAOK,KAAK,CAAC1B,GAAG,GAAG,YAAP,EAAqBsB,OAArB,CAAL,CACJK,IADI,CACC1B,gBADD,EAEJ0B,IAFI,CAECzB,GAAG,IAAI;AAAEQ,MAAAA,QAAQ,CAACR,GAAG,CAACS,KAAL,CAAR;AAAqB,KAF/B,CAAP;AAGD,GALD;;AAOA,QAAMY,WAAW,GAAG,CAACK,MAAD,EAASC,QAAT,EAAmBC,IAAnB,KAA4B;AAC9C,QAAIC,IAAI,GAAG;AACTH,MAAAA,MAAM,EAAEA,MADC;AAETI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFA,KAAX;;AAOA,QAAIJ,QAAQ,IAAIb,QAAQ,EAAxB,EAA4B;AAC1Be,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiClB,QAAQ,EAAzC;AACD;;AACD,QAAIgB,IAAJ,EAAU;AACRC,MAAAA,IAAI,CAACD,IAAL,GAAYI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAZ;AACD;;AACD,WAAOC,IAAP;AACD,GAfD;;AAiBA,QAAMK,SAAS,GAAG,MAAM;AACtB,UAAMd,OAAO,GAAGC,WAAW,CAAC,KAAD,EAAQ,IAAR,CAA3B,CADsB,CACoB;;AAC1C,WAAOG,KAAK,CAAC1B,GAAG,GAAG,gBAAP,EAAyBsB,OAAzB,CAAL,CAAuCK,IAAvC,CAA4C1B,gBAA5C,CAAP;AACD,GAHD;;AAKA,QAAMoC,UAAU,GAAG,MAAM;AACvB,UAAMf,OAAO,GAAGC,WAAW,CAAC,KAAD,EAAQ,IAAR,CAA3B;AACA,WAAOG,KAAK,CAAC1B,GAAG,GAAG,mBAAP,EAA4BsB,OAA5B,CAAL,CAA0CK,IAA1C,CAA+C1B,gBAA/C,CAAP;AACD,GAHD;;AAKA,SAAO;AACLkB,IAAAA,KADK;AAELF,IAAAA,MAFK;AAGLmB,IAAAA,SAHK;AAILC,IAAAA;AAJK,GAAP;AAOD;;AAED,IAAIC,SAAS,GAAG7B,SAAS,EAAzB;AACA,eAAe6B,SAAf","sourcesContent":["// http://localhost:8080/securitystarter   https://frederikkesimone.dk/sys\r\nconst URL = \"https://frederikkesimone.dk/sys\";\r\nfunction handleHttpErrors(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject({ status: res.status, fullError: res.json() });\r\n  }\r\n  return res.json();\r\n}\r\n\r\nfunction ApiFacade() {\r\n\r\n  const setToken = token => {\r\n    localStorage.setItem(\"jwtToken\", token);\r\n  };\r\n  const getToken = () => {\r\n    return localStorage.getItem(\"jwtToken\");\r\n  };\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() != null;\r\n    return loggedIn;\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  };\r\n\r\n  const login = (user, pass) => {\r\n    const options = makeOptions(\"POST\", true, { username: user, password: pass });\r\n    return fetch(URL + \"/api/login\", options)\r\n      .then(handleHttpErrors)\r\n      .then(res => { setToken(res.token) })\r\n  }\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    const options = makeOptions(\"GET\", true); //True add's the token\r\n    return fetch(URL + \"/api/info/user\", options).then(handleHttpErrors);\r\n  }\r\n\r\n  const getRecipes = () => {\r\n    const options = makeOptions(\"GET\", true);\r\n    return fetch(URL + \"/api/food/recipes\", options).then(handleHttpErrors)\r\n  }\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    fetchData,\r\n    getRecipes\r\n  }\r\n\r\n}\r\n\r\nlet returnVal = ApiFacade();\r\nexport default returnVal;\r\n"]},"metadata":{},"sourceType":"module"}